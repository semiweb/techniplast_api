=begin
#DVC AMS API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

OpenAPI spec version: 2.0.0_alpha1
Contact: marco.storto@tecniplast.it
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 3.0.0

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for OpenapiClient::BeddingChangeRequest
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'BeddingChangeRequest' do
  before do
    # run before each test
    @instance = OpenapiClient::BeddingChangeRequest.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of BeddingChangeRequest' do
    it 'should create an instance of BeddingChangeRequest' do
      expect(@instance).to be_instance_of(OpenapiClient::BeddingChangeRequest)
    end
  end
  describe 'test attribute "label"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "location"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["HOOD"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.location = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "reader"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "feedback"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["TooClean", "TooDirty", "Fair", "NoFeedback", "NotAvailable", "Flooding", "PupsComing"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.feedback = value }.not_to raise_error
      # end
    end
  end

end
